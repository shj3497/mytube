{"version":3,"sources":["components/video_detail_channel/video_detail_channel.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","components/comment_item/comment_item.module.css","app.module.css","components/video_detail_title/video_detail_title.module.css","components/loading/loading.module.css","components/comment_list/comment_list.module.css","components/video_list/video_list.module.css","components/video_detail/video_detail.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/loading/loading.jsx","components/search_header/youtube.png","components/search_header/search_header.jsx","components/video_detail_iframe/video_detail_iframe.jsx","components/video_detail_title/video_detail_title.jsx","components/video_detail_channel/video_detail_channel.jsx","components/comment_item/comment_item.jsx","components/comment_list/comment_list.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js","service/youtube-fetch.js"],"names":["module","exports","VideoItem","memo","props","video","snippet","title","channelTitle","thumbnails","medium","url","onVideoClick","displayType","display","styles","list","grid","className","video__container","onClick","video__item","video__thumbnail","src","alt","video__description","video__title","video__channel","VideoList","videos","style","video__list","map","id","videoId","Loading","container","loader","SearchHeader","logoClick","mainPageGo","inputRef","useRef","handleSearch","value","current","onSearch","header","logo","img","youtubePng","ref","input","type","placeholder","onKeyPress","event","key","button","VideoDetailIframe","width","height","frameBorder","allowFullScreen","VideoDetailTitle","videoInfo","useState","likeCount","setLikeCount","disLikeCount","setDisLikeCount","likeCountChk","setLikeCountChk","disLikeCountChk","setDisLikeCountChk","likeRef","disLikeRef","viewCount","statistics","publishTime","split","replaceAll","parseInt","toLocaleString","mathCount","number","Math","floor","useEffect","dislikeCount","like","color","VideoDetailChannel","subscriber","channel","subsribe","setSubsribe","subscriberCount","hiddenSubscriberCount","description","subscribeRef","channel_Container","default","channelInfo","subscribeON","subscribeOFF","line","i","CommentItem","date","comment","today","userImg","topLevelComment","authorProfileImageUrl","userId","authorDisplayName","userComment","textOriginal","commentDate","publishedAt","item","result_arr","length","push","userInfo","CommentList","comments","day","Date","year","getFullYear","month","getMonth","getDate","commentList","VideoDetail","detail","App","youtube","isLoading","setLoading","setVideos","selectedVideo","setSelectedVideo","setChannelInfo","setVideoInfo","setComments","appRef","channelViewInfo","channelId","a","then","info","videoViewInfo","videoComments","selectVideo","setTimeout","scrollUp","scrollIntoView","mostPopular","app","query","search","content","this","getRequestOptions","method","redirect","fetch","requestOptions","response","json","result_1","items","channelID","videoID","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46150459.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_detail_channel_container__3MYTO\",\"channel_Container\":\"video_detail_channel_channel_Container__39dOD\",\"channel\":\"video_detail_channel_channel__89QFs\",\"channelInfo\":\"video_detail_channel_channelInfo__3u4hP\",\"channelTitle\":\"video_detail_channel_channelTitle__RhPpD\",\"subscribeON\":\"video_detail_channel_subscribeON__2JI5s\",\"subscribeOFF\":\"video_detail_channel_subscribeOFF__3GbZi\",\"description\":\"video_detail_channel_description__2-snB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video__container\":\"video_item_video__container__2kHgO\",\"grid\":\"video_item_grid__9K7hV\",\"list\":\"video_item_list__2s8YS\",\"video__item\":\"video_item_video__item__2DQOS\",\"video__thumbnail\":\"video_item_video__thumbnail__1WhU1\",\"video__description\":\"video_item_video__description__3ZL2_\",\"video__title\":\"video_item_video__title__22O1b\",\"video__channel\":\"video_item_video__channel__3y0jF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__2aaTk\",\"logo\":\"search_header_logo__2QqoC\",\"img\":\"search_header_img__Qtb3z\",\"title\":\"search_header_title__2m2Kr\",\"input\":\"search_header_input__2fK5a\",\"button\":\"search_header_button__mi5oB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"comment_item_container__4INB4\",\"userImg\":\"comment_item_userImg__1uRyI\",\"userInfo\":\"comment_item_userInfo__EupH_\",\"userId\":\"comment_item_userId__37LKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__27JZb\",\"content\":\"app_content__1zMVp\",\"detail\":\"app_detail___JXvP\",\"list\":\"app_list__1lbDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_detail_title_container__F8II5\",\"viewCount\":\"video_detail_title_viewCount__3Tg_r\",\"like\":\"video_detail_title_like__2km8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loading_container__2FgHm\",\"loader\":\"loading_loader__1N_TI\",\"animate\":\"loading_animate__HpQRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentList\":\"comment_list_commentList__3e8mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video__list\":\"video_list_video__list__3d4BU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__3qwfY\"};","import React, { memo } from 'react';\r\nimport styles from './video_item.module.css';\r\n\r\nconst VideoItem = memo(\r\n  (props) => {\r\n    const {title, channelTitle} = props.video.snippet;\r\n    const thumbnails = props.video.snippet.thumbnails.medium.url\r\n    const onVideoClick = props.onVideoClick;\r\n    const {video, display} = props;\r\n  \r\n    const displayType = display === 'list' ? styles.list : styles.grid;\r\n  \r\n    return(\r\n      <li className={`${styles.video__container} ${displayType}`} onClick={() => {onVideoClick(video)}}>\r\n        <div className={styles.video__item}>\r\n          <img \r\n            className={styles.video__thumbnail} \r\n            src= {thumbnails} \r\n            alt=\"video thumbnail\" \r\n          />\r\n          <div className={styles.video__description}>\r\n            <p className={styles.video__title}>{title}</p>\r\n            <p className={styles.video__channel}>{channelTitle}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n);\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from '../video_item/video_item';\r\nimport style from './video_list.module.css'\r\nconst VideoList = ({videos, onVideoClick, display}) => {\r\n\r\n  return (\r\n    <ul className={style.video__list}>\r\n      {\r\n        videos.map(video => (\r\n          // key값 주의\r\n          <VideoItem key={video.id.videoId} video={video} onVideoClick={onVideoClick} display={display} />\r\n          )\r\n        )\r\n      }\r\n    </ul>\r\n    )\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\nimport styles from './loading.module.css';\r\n\r\nconst Loading = (props) => (\r\n      \r\n  <div className={styles.container}>\r\n    <div className={styles.loader}><span></span></div>\r\n  </div>\r\n  );\r\n\r\nexport default Loading;","export default __webpack_public_path__ + \"static/media/youtube.611e434d.png\";","import React, { useRef } from 'react';\r\nimport styles from './search_header.module.css'\r\nimport youtubePng from './youtube.png';\r\n\r\nconst SearchHeader = (props) => {\r\n\r\n  const logoClick = props.mainPageGo;\r\n  const inputRef = useRef();\r\n\r\n  const handleSearch = () => {\r\n    const value = inputRef.current.value;\r\n    // 자식 컴포넌트에서 부모컴포넌트의 함수를 호출한다?\r\n    props.onSearch(value);\r\n  }\r\n\r\n  const mainPageGo = () => {\r\n    logoClick();\r\n  }\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n  }\r\n\r\n  const onKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      handleSearch();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <header className={styles.header}>\r\n      <div className={styles.logo} onClick={mainPageGo}>\r\n        <img className={styles.img} src={youtubePng} alt=\"logo\" />\r\n        <h1 className={styles.title}>Mytube</h1>\r\n      </div>\r\n      <input ref={inputRef} className={styles.input} type=\"search\" placeholder=\"Search...\" onKeyPress={onKeyPress} />\r\n      <button className={styles.button} type=\"submit\" onClick={onClick}>\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default SearchHeader;","import React from 'react';\r\n\r\nconst VideoDetailIframe = ({video}) => {\r\n  // const {video} = props\r\n  return(\r\n    <iframe\r\n      className=\"\"\r\n      id=\"player\" \r\n      type=\"text/html\" \r\n      title=\"youtube video player\"\r\n      width=\"100%\" \r\n      height=\"700px\"\r\n      src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n      frameBorder=\"0\"\r\n      allowFullScreen\r\n      >\r\n    </iframe>\r\n  )\r\n};\r\nexport default VideoDetailIframe;","import React, {useState, useEffect, useRef} from 'react';\r\nimport styles from './video_detail_title.module.css';\r\n\r\nconst VideoDetailTitle = ({video, videoInfo}) => {\r\n\r\n  const [likeCount, setLikeCount] = useState(0);\r\n  const [disLikeCount, setDisLikeCount] = useState(0);\r\n  const [likeCountChk, setLikeCountChk] = useState(true);\r\n  const [disLikeCountChk, setDisLikeCountChk] = useState(true);\r\n\r\n  const likeRef = useRef();\r\n  const disLikeRef = useRef();\r\n\r\n  let viewCount = videoInfo[0].statistics.viewCount;\r\n  let publishTime = video.snippet.publishTime.split('T')[0].replaceAll('-','. ');\r\n  viewCount = parseInt(viewCount).toLocaleString('ko-KR');\r\n\r\n  const mathCount = (number) => {\r\n    let result;\r\n    if(number >= 10000){\r\n      result = Math.floor(number/10000)+ '만명';\r\n    }else if(number >= 1000){\r\n      result = Math.floor(number/1000) + '천명'\r\n    }else{\r\n      result = number + '명'\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  const countUp = () => {\r\n    if(likeCountChk){\r\n      setLikeCount(parseInt(likeCount) + 1);\r\n      setLikeCountChk(false);\r\n      likeRef.current.style.color = `#3EA6FF`;\r\n      if(!disLikeCountChk){\r\n        setDisLikeCount(parseInt(disLikeCount) - 1);\r\n        setDisLikeCountChk(true);\r\n        disLikeRef.current.style.color = `#aaaaaa`;\r\n      }\r\n    }else{\r\n      setLikeCount(parseInt(likeCount) - 1);\r\n      setLikeCountChk(true);\r\n      likeRef.current.style.color = `#aaaaaa`;\r\n    }\r\n  }\r\n  \r\n  const countDown = () => {\r\n    if(disLikeCountChk){\r\n      setDisLikeCount(parseInt(disLikeCount) + 1);\r\n      setDisLikeCountChk(false);\r\n      disLikeRef.current.style.color = `#3EA6FF`;\r\n      if(!likeCountChk){\r\n        setLikeCount(parseInt(likeCount) - 1);\r\n        setLikeCountChk(true);\r\n        likeRef.current.style.color = `#aaaaaa`;\r\n      }\r\n    }else{\r\n      setDisLikeCount(parseInt(disLikeCount) - 1);\r\n      setDisLikeCountChk(false);\r\n      disLikeRef.current.style.color = `#aaaaaa`;\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setLikeCount(videoInfo[0].statistics.likeCount);\r\n    setDisLikeCount(videoInfo[0].statistics.dislikeCount);\r\n  }, [videoInfo])\r\n\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      <h2>{video.snippet.title}</h2>\r\n      <div className={styles.viewCount}>\r\n        <p>조회수 {viewCount}회 <span>• {publishTime}</span> </p>\r\n        <div className={styles.like}>\r\n          <ul>\r\n            <li ref={likeRef} onClick={countUp}><span><i className=\"fas fa-thumbs-up\"></i>{mathCount(likeCount)}</span></li>\r\n            <li ref={disLikeRef} onClick={countDown}><span><i className=\"fas fa-thumbs-down\"></i>{mathCount(disLikeCount)}</span></li>\r\n            <li><span><i className=\"fas fa-share\"></i>공유</span></li>\r\n            <li><span><i className=\"fas fa-save\"></i>저장</span></li>\r\n            <li><i className=\"fas fa-ellipsis-h\"></i></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetailTitle;","import React, { useState, useRef } from 'react';\r\nimport styles from './video_detail_channel.module.css'\r\n\r\nconst VideoDetailChannel = ({video, channel}) => {\r\n\r\n  const [subsribe, setSubsribe] = useState(false);\r\n\r\n  const subscriberCount = channel[0].statistics.subscriberCount;\r\n  const hiddenSubscriberCount = channel[0].statistics.hiddenSubscriberCount\r\n  let subscriber;\r\n  if(subscriberCount >= 10000){\r\n    subscriber = subscriberCount/10000 + '만명';\r\n  }else if(subscriberCount >= 1000){\r\n    subscriber = subscriberCount/1000 + '천명'\r\n  }else{\r\n    subscriber = subscriberCount + '명'\r\n  }\r\n  const description = channel[0].snippet.description;\r\n\r\n  const subscribeRef = useRef();\r\n  const subscribeBtn = () => {\r\n    if(subsribe){\r\n      setSubsribe(false);\r\n    }else{\r\n      setSubsribe(true);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      <div className={styles.channel_Container}>\r\n        <div className={styles.channel}>\r\n          <div className={styles.thumbnails}>\r\n            <img src={channel[0].snippet.thumbnails.default.url} alt=\"\" />\r\n          </div>\r\n          <div className={styles.channelInfo}>\r\n            <h3 className={styles.channelTitle}>{video.snippet.channelTitle}</h3>\r\n            {\r\n              hiddenSubscriberCount ?\r\n              (\r\n                <span></span>\r\n              ):(\r\n                <p>구독자 {subscriber}</p>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <div onClick={subscribeBtn}>\r\n          {\r\n            subsribe ? (\r\n              <span ref={subscribeRef} className={styles.subscribeON}>\r\n                구독중\r\n              </span>\r\n            ) : (\r\n              <span ref={subscribeRef} className={styles.subscribeOFF}>\r\n                구독\r\n              </span>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className={styles.description}>\r\n        {\r\n          description.split('\\n').map((line, i) => {\r\n            return (<span key={i}>{line}<br/></span>)\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetailChannel;","import React from 'react';\r\nimport styles from './comment_item.module.css'\r\n\r\nconst CommentItem = (props) => {\r\n\r\n  const {comment, today} = props\r\n  const userImg = comment.snippet.topLevelComment.snippet.authorProfileImageUrl;\r\n  const userId = comment.snippet.topLevelComment.snippet.authorDisplayName;\r\n  const userComment = comment.snippet.topLevelComment.snippet.textOriginal\r\n  const commentDate = comment.snippet.topLevelComment.snippet.publishedAt.split('T')[0].split('-').map(item=>parseInt(item));\r\n  let result_arr = [];\r\n  let date;\r\n  for(let i=0; i<commentDate.length; i++){\r\n    result_arr.push(today[i]-commentDate[i]);\r\n  }\r\n  if(result_arr[0] > 1){\r\n    date = result_arr[0] - 1 + '년 전' ;\r\n  }else if(result_arr[0] === 1){\r\n    date = result_arr[0] * 12 + result_arr[1] + '개월 전';\r\n  }else if(result_arr[0] === 0){\r\n    if(result_arr[1] > 0){\r\n      date = result_arr[1] + '개월 전';\r\n    }else if(result_arr[1] === 0){\r\n      date = result_arr[2] + '일 전'\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <li>\r\n      <div className={styles.container}>\r\n        <div className={styles.userImg}>\r\n          <img src={userImg} alt=\"\" />\r\n        </div>\r\n        <div className={styles.userInfo}>\r\n          <p className={styles.userId}>{userId} <span>{date}</span></p>\r\n          <p className={styles.userComment}>{userComment}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CommentItem;","import React from 'react';\r\nimport styles from './comment_list.module.css'\r\nimport CommentItem from '../comment_item/comment_item';\r\n\r\nconst CommentList = (props) => {\r\n  \r\n  const {comments} = props\r\n  \r\n  const day = new Date();\r\n  const year = day.getFullYear();\r\n  const month = day.getMonth() + 1;\r\n  const date = day.getDate();\r\n  let today = [];\r\n  today.push(year)\r\n  today.push(month)\r\n  today.push(date);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ul className={styles.commentList}>\r\n        {\r\n          comments.map(comment => (<CommentItem key={comment.id} comment={comment} today={today} />))\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentList\r\n","import React from 'react';\r\nimport styles from './video_detail.module.css';\r\nimport VideoDetailIframe from '../video_detail_iframe/video_detail_iframe';\r\nimport VideoDetailTitle from '../video_detail_title/video_detail_title';\r\nimport VideoDetailChannel from '../video_detail_channel/video_detail_channel';\r\nimport CommentList from '../comment_list/comment_list';\r\n\r\nconst VideoDetail = (props) => {\r\n\r\n  const {video, channel, videoInfo, comments} = props;\r\n  // console.log(comments);\r\n\r\n  return(\r\n    <section className={styles.detail}>\r\n      <VideoDetailIframe video={video} />\r\n      <div className=\"\">\r\n        <VideoDetailTitle video={video} videoInfo={videoInfo}  />\r\n        <VideoDetailChannel video={video} channel={channel} />\r\n        <CommentList comments={comments} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoDetail;","import React, {useEffect, useState, useRef} from 'react';\nimport VideoList from './components/video_list/video_list';\nimport Loading from './components/loading/loading';\nimport SearchHeader from './components/search_header/search_header';\nimport VideoDetail from './components/video_detail/video_detail';\nimport styles from './app.module.css'\n\nfunction App({ youtube }) {\n  const [isLoading, setLoading] = useState(true);\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [channelInfo, setChannelInfo] = useState();\n  const [videoInfo, setVideoInfo] = useState();\n  const [comments, setComments] = useState();\n  const appRef = useRef();\n  \n  const mainPageGo = () => {\n    //! 함수명은 mainPageGo로 정했지만 사용자에게 영상을 추천하는 알고리즘은 없으므로 최근에 검색했던 리스트 페이지로 이동시켰다.\n    setSelectedVideo(null);\n  }\n\n  const channelViewInfo = async(channelId) => {\n    youtube.channel(channelId)\n      .then(info => {\n        setChannelInfo(info);\n      })\n  }\n\n  const videoViewInfo = async(videoId) => {\n    youtube.videoInfo(videoId)\n      .then(info => {\n        setVideoInfo(info);\n      })\n  }\n\n  const videoComments = async(videoId) => {\n    youtube.comments(videoId)\n      .then(comments => {\n        setComments(comments);\n      })\n  }\n\n  // 안되면 promiseAll이라는 걸로 해결해보자.\n  const selectVideo = async(video) => {\n    await videoComments(video.id.videoId);\n    await channelViewInfo(video.snippet.channelId);\n    await videoViewInfo(video.id.videoId);\n    \n    setTimeout(() => {\n      setSelectedVideo(video);\n      scrollUp();\n    }, 700);\n\n  }\n\n  const search = query => {\n    youtube.search(query)\n      .then(videos => {\n        setVideos(videos)\n        setSelectedVideo(null);\n      });\n  }\n\n  const scrollUp = () => {\n    appRef.current.scrollIntoView();\n  }\n\n\n  useEffect(() => {\n    youtube.mostPopular() //\n      .then(videos => {\n        setVideos(videos);\n        setTimeout(()=>{\n          setLoading(false);\n        },1000)\n      })\n  }, [youtube]);\n  \n  return (\n    isLoading ? \n      (\n        <Loading />\n      )\n      :\n      (\n        <div className={styles.app} ref={appRef}>\n          <SearchHeader onSearch={search} mainPageGo={mainPageGo} />\n          <section className={styles.content}>\n            {\n              selectedVideo && (\n                <div className={styles.detail}>\n                  <VideoDetail video={selectedVideo} channel={channelInfo} videoInfo={videoInfo} comments={comments} />\n                </div>\n              )\n            }\n            <div className={styles.list}>\n              <VideoList videos={videos} onVideoClick={selectVideo} display={selectedVideo ? 'list' : 'grid'} />\n            </div>\n          </section>\n          \n        </div>\n      )\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport Youtube from './service/youtube-fetch'\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY1);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","class Youtube {\r\n  constructor(key){\r\n    this.key = key;\r\n    this.getRequestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n  }\r\n\r\n  async mostPopular(){\r\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=30&type=video&key=${this.key}`, this.requestOptions);\r\n    const result_1 = await response.json();\r\n    return result_1.items;\r\n  }\r\n\r\n  async search(query){\r\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=30&q=${query}&type=video&key=${this.key}`, this.requestOptions);\r\n    const result_1 = await response.json();\r\n    return result_1.items;\r\n    // .then(result => result.items.map(item => ({...item, id: item.id.videoId})))\r\n  }\r\n\r\n  async channel(channelID){\r\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&part=snippet&id=${channelID}&key=${this.key}`, this.requestOptions)\r\n    const result_1 = await response.json();\r\n    return result_1.items;\r\n  }\r\n\r\n  async videoInfo(videoID){\r\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&part=statistics&id=${videoID}&key=${this.key}`, this.requestOptions)\r\n    const result_1 = await response.json();\r\n    return result_1.items;\r\n  }\r\n\r\n  async comments(videoId){\r\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&order=relevance&videoId=${videoId}&maxResults=25&key=${this.key}`, this.requestOptions)\r\n    const result_1 = await response.json();\r\n    return result_1.items;\r\n  }\r\n}\r\n\r\nexport default Youtube;"],"sourceRoot":""}